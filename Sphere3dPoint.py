import sys, math, pygame

class Point3D:
    def __init__(self, x = 0, y = 0, z = 0):
        self.x, self.y, self.z = float(x), float(y), float(z)
 
    def rotateX(self, angle):
        # Rotates the point around the X axis by the given angle in degrees. 
        rad = angle * math.pi / 180
        cosa = math.cos(rad)
        sina = math.sin(rad)
        y = self.y * cosa - self.z * sina
        z = self.y * sina + self.z * cosa
        return Point3D(self.x, y, z)
 
    def rotateY(self, angle):
        # Rotates the point around the Y axis by the given angle in degrees. 
        rad = angle * math.pi / 180
        cosa = math.cos(rad)
        sina = math.sin(rad)
        z = self.z * cosa - self.x * sina
        x = self.z * sina + self.x * cosa
        return Point3D(x, self.y, z)
 
    def rotateZ(self, angle):
        # Rotates the point around the Z axis by the given angle in degrees.
        rad = angle * math.pi / 180
        cosa = math.cos(rad)
        sina = math.sin(rad)
        x = self.x * cosa - self.y * sina
        y = self.x * sina + self.y * cosa
        return Point3D(x, y, self.z)
 
    def project(self, win_width, win_height, fov, viewer_distance):
        # Transforms this 3D point to 2D using a perspective projection.
        factor = fov / (viewer_distance + self.z)
        x = self.x * factor + win_width / 2
        y = -self.y * factor + win_height / 2
        return Point3D(x, y, 1)

class Simulation:
    def __init__(self, win_width = 640, win_height = 480):
        pygame.init()
 
        self.screen = pygame.display.set_mode((win_width, win_height))
        pygame.display.set_caption("Simulation of sphere 3d point rotation ")
 
        self.clock = pygame.time.Clock()
 
        self.vertices = [
Point3D(0.0, 0.0, -2.0),
            Point3D(-0.0909119723284, 0.389510832227, -1.9595959596),
            Point3D(-0.561678410283, 0.0349247867577, -1.91919191919),
            Point3D(-0.377397245097, -0.572474825571, -1.87878787879),
            Point3D(0.256194536573, -0.744788038437, -1.83838383838),
            Point3D(0.80069455147, -0.355185699744, -1.79797979798),
            Point3D(0.900782436514, 0.315465463165, -1.75757575758),
            Point3D(0.519869209031, 0.883774461753, -1.71717171717),
            Point3D(-0.139946392563, 1.08114067787, -1.67676767677),
            Point3D(-0.787908031285, 0.8375649132, -1.63636363636),
            Point3D(-1.17668041562, 0.261411873431, -1.59595959596),
            Point3D(-1.17906800209, -0.435942152154, -1.55555555556),
            Point3D(-0.805705755278, -1.02720695191, -1.51515151515),
            Point3D(-0.178057533836, -1.3391846028, -1.47474747475),
            Point3D(0.522665714968, -1.29208338073, -1.43434343434),
            Point3D(1.11123226685, -0.906694995653, -1.39393939394),
            Point3D(1.44437855951, -0.285854199839, -1.35353535354),
            Point3D(1.44899366492, 0.419646891428, -1.31313131313),
            Point3D(1.13031487869, 1.05002550648, -1.27272727273),
            Point3D(0.562475462337, 1.47139417062, -1.23232323232),
            Point3D(-0.133432826075, 1.60047627938, -1.19191919192),
            Point3D(-0.81745286171, 1.41625692398, -1.15151515152),
            Point3D(-1.35888141349, 0.95857884539, -1.11111111111),
            Point3D(-1.65945052204, 0.315927734823, -1.07070707071),
            Point3D(-1.66831491914, -0.393955576572, -1.0303030303),
            Point3D(-1.38745721967, -1.04645231778, -0.989898989899),
            Point3D(-0.867845005957, -1.53143866561, -0.949494949495),
            Point3D(-0.198039294091, -1.77040508274, -0.909090909091),
            Point3D(0.512154562561, -1.72715975758, -0.868686868687),
            Point3D(1.15001619559, -1.41117337923, -0.828282828283),
            Point3D(1.61732374618, -0.873791116709, -0.787878787879),
            Point3D(1.84441700563, -0.198513000196, -0.747474747475),
            Point3D(1.7991998956, 0.512767735784, -0.707070707071),
            Point3D(1.4902308, 1.15532147833, -0.666666666667),
            Point3D(0.963918891931, 1.63665985859, -0.626262626263),
            Point3D(0.296618568272, 1.88912337933, -0.585858585859),
            Point3D(-0.416988510962, 1.87845679231, -0.545454545455),
            Point3D(-1.07746423489, 1.60748088943, -0.505050505051),
            Point3D(-1.59425504638, 1.11465443523, -0.464646464646),
            Point3D(-1.89763478665, 0.467974980049, -0.424242424242),
            Point3D(-1.94749862349, -0.244779914634, -0.383838383838),
            Point3D(-1.7380255951, -0.928073209689, -0.343434343434),
            Point3D(-1.29778233999, -1.4912858993, -0.30303030303),
            Point3D(-0.685414448826, -1.86043932433, -0.262626262626),
            Point3D(0.0184003401811, -1.98753080767, -0.222222222222),
            Point3D(0.721636981189, -1.85638956476, -0.181818181818),
            Point3D(1.3328637855, -1.48441105153, -0.141414141414),
            Point3D(1.77294326671, -0.920037571259, -0.10101010101),
            Point3D(1.98505903556, -0.236363133283, -0.0606060606061),
            Point3D(1.94185906405, 0.478304561701, -0.020202020202),
            Point3D(1.64886457106, 1.13174091765, 0.020202020202),
            Point3D(1.14374554542, 1.63956489129, 0.0606060606061),
            Point3D(0.49155798762, 1.93601851858, 0.10101010101),
            Point3D(-0.223480075297, 1.98243756435, 0.141414141414),
            Point3D(-0.908679824875, 1.77235524786, 0.181818181818),
            Point3D(-1.47474067151, 1.33257541466, 0.222222222222),
            Point3D(-1.84731876731, 0.720028345361, 0.262626262626),
            Point3D(-1.97685499204, 0.0147301012635, 0.30303030303),
            Point3D(-1.84539104935, -0.690351161897, 0.343434343434),
            Point3D(-1.46943660284, -1.30131632024, 0.383838383838),
            Point3D(-0.898408279034, -1.73576522884, 0.424242424242),
            Point3D(-0.208695946948, -1.93405006776, 0.464646464646),
            Point3D(0.506034928389, -1.86784705975, 0.505050505051),
            Point3D(1.14718747278, -1.54481074606, 0.545454545455),
            Point3D(1.6247060839, -1.00851368772, 0.585858585859),
            Point3D(1.86992277816, -0.333442538793, 0.626262626263),
            Point3D(1.84599157754, 0.384539531394, 0.666666666667),
            Point3D(1.55432273796, 1.04121651997, 0.707070707071),
            Point3D(1.03585190603, 1.53892570667, 0.747474747475),
            Point3D(0.366598619178, 1.80134740348, 0.787878787879),
            Point3D(-0.352273697546, 1.78601534103, 0.828282828283),
            Point3D(-1.00887083212, 1.49250218367, 0.868686868687),
            Point3D(-1.49766220445, 0.964656229114, 0.909090909091),
            Point3D(-1.7368581765, 0.285977299128, 0.949494949495),
            Point3D(-1.68333610905, -0.431832761322, 0.989898989899),
            Point3D(-1.34241121259, -1.06602429713, 1.0303030303),
            Point3D(-0.77020698558, -1.5034518842, 1.07070707071),
            Point3D(-0.0672813994036, -1.66159721716, 1.11111111111),
            Point3D(0.636540064537, -1.50626345706, 1.15151515152),
            Point3D(1.20460753886, -1.06219081019, 1.19191919192),
            Point3D(1.5200122654, -0.413451525725, 1.23232323232),
            Point3D(1.51168428736, 0.308181609783, 1.27272727273),
            Point3D(1.17451982564, 0.946672770101, 1.31313131313),
            Point3D(0.577988264227, 1.35420515918, 1.35353535354),
            Point3D(-0.141210211889, 1.42723251157, 1.39393939394),
            Point3D(-0.804382620193, 1.13825634753, 1.43434343434),
            Point3D(-1.23209104688, 0.554140359401, 1.47474747475),
            Point3D(-1.2946699906, -0.167766211036, 1.51515151515),
            Point3D(-0.960153132567, -0.811389472203, 1.55555555556),
            Point3D(-0.32365583435, -1.16110286752, 1.59595959596),
            Point3D(0.398927680512, -1.07850394311, 1.63636363636),
            Point3D(0.925918461876, -0.57543475747, 1.67676767677),
            Point3D(1.01440910401, 0.149316654967, 1.71717171717),
            Point3D(0.5928861455, 0.747939486092, 1.75757575758),
            Point3D(-0.132375996837, 0.865878306414, 1.79797979798),
            Point3D(-0.68932616778, 0.381017449971, 1.83838383838),
            Point3D(-0.586304008077, -0.355533003578, 1.87878787879),
            Point3D(0.141254557892, -0.544747214021, 1.91919191919),
            Point3D(0.354222208268, 0.185769487013, 1.9595959596),
            Point3D(0.0, 0.0, 2.0)
        ]

        self.angleX, self.angleY, self.angleZ = 0, 0, 0
 
    def run(self):
        while 1:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    sys.exit()
 
            self.clock.tick(50)
            self.screen.fill((0,0,0))
 
            for v in self.vertices:
                # Rotate the point around X axis, then around Y axis, and finally around Z axis.
                r = v.rotateX(self.angleX).rotateY(self.angleY).rotateZ(self.angleZ)
                # Transform the point from 3D to 2D
                p = r.project(self.screen.get_width(), self.screen.get_height(), 256, 4)
                x, y = int(p.x), int(p.y)
                self.screen.fill((255,255,255),(x,y,2,2))
 
            self.angleX += 1
            self.angleY += 1
            self.angleZ += 1
 
            pygame.display.flip()
 
if __name__ == "__main__":
    Simulation().run()
